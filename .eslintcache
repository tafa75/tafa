[{"/home/tafa/Desktop/gest_hosp_front/src/reportWebVitals.js":"1","/home/tafa/Desktop/gest_hosp_front/src/App.js":"2","/home/tafa/Desktop/gest_hosp_front/src/components/Profile/Profile.js":"3","/home/tafa/Desktop/gest_hosp_front/src/components/Login/Login2.js":"4","/home/tafa/Desktop/gest_hosp_front/src/components/Admin/CreateUserForm.js":"5","/home/tafa/Desktop/gest_hosp_front/src/components/Records/ModalPage.js":"6","/home/tafa/Desktop/gest_hosp_front/src/components/Labo/SampleCollection.js":"7","/home/tafa/Desktop/gest_hosp_front/src/components/Labo/Lab.js":"8","/home/tafa/Desktop/gest_hosp_front/src/components/Records/EditModal.js":"9","/home/tafa/Desktop/gest_hosp_front/src/components/Records/Patientlist.js":"10","/home/tafa/Desktop/gest_hosp_front/src/components/helpers/helpers.js":"11","/home/tafa/Desktop/gest_hosp_front/src/components/Admin/Users.js":"12","/home/tafa/Desktop/gest_hosp_front/src/components/Admin/Admin.js":"13","/home/tafa/Desktop/gest_hosp_front/src/components/Labo/RequestProcessingForm.js":"14","/home/tafa/Desktop/gest_hosp_front/src/components/Labo/ProcessingSection.js":"15","/home/tafa/Desktop/gest_hosp_front/src/components/Labo/CompletedLabTests.js":"16","/home/tafa/Desktop/gest_hosp_front/src/components/Labo/PathologistComment.js":"17","/home/tafa/Desktop/gest_hosp_front/src/components/Labo/PrintResult.js":"18","/home/tafa/Desktop/gest_hosp_front/src/components/Labo/SampleReception.js":"19","/home/tafa/Desktop/gest_hosp_front/src/components/Records/PatientAssignedToday.js":"20","/home/tafa/Desktop/gest_hosp_front/src/components/Records/DoctorsListModal.js":"21","/home/tafa/Desktop/gest_hosp_front/src/components/PatientForm.js":"22","/home/tafa/Desktop/gest_hosp_front/src/components/loading.js":"23","/home/tafa/Desktop/gest_hosp_front/src/components/Account/ServicesSetupForm.js":"24","/home/tafa/Desktop/gest_hosp_front/src/components/Pharmacy/EditDrugs.js":"25","/home/tafa/Desktop/gest_hosp_front/src/components/Doctor/AssignedList.js":"26","/home/tafa/Desktop/gest_hosp_front/src/components/Doctor/DressingRequestForm.js":"27","/home/tafa/Desktop/gest_hosp_front/src/components/Doctor/PcomplaintsForm.js":"28","/home/tafa/Desktop/gest_hosp_front/src/components/Doctor/EditPrescriptionRequest.js":"29","/home/tafa/Desktop/gest_hosp_front/src/components/Doctor/SysExaminationEdit.js":"30","/home/tafa/Desktop/gest_hosp_front/src/components/Pharmacy/Pharmacy.js":"31","/home/tafa/Desktop/gest_hosp_front/src/components/Doctor/PreviousVisits.js":"32","/home/tafa/Desktop/gest_hosp_front/src/components/Doctor/PatientClarking.js":"33","/home/tafa/Desktop/gest_hosp_front/src/components/Doctor/NewRadiologyInvestigations.js":"34","/home/tafa/Desktop/gest_hosp_front/src/components/Pharmacy/PendingPharmacyRequest.js":"35","/home/tafa/Desktop/gest_hosp_front/src/components/Pharmacy/AddDrug.js":"36","/home/tafa/Desktop/gest_hosp_front/src/components/Pharmacy/PrescriptionProcessingForm.js":"37","/home/tafa/Desktop/gest_hosp_front/src/nav-old.js":"38","/home/tafa/Desktop/gest_hosp_front/src/error-boundary/MyErrorBoundary.js":"39"},{"size":362,"mtime":1606317529560,"results":"40","hashOfConfig":"41"},{"size":5737,"mtime":1606324350805,"results":"42","hashOfConfig":"41"},{"size":766,"mtime":1606321564546,"results":"43","hashOfConfig":"41"},{"size":1645,"mtime":1606324468849,"results":"44","hashOfConfig":"41"},{"size":7629,"mtime":1606323413122,"results":"45","hashOfConfig":"41"},{"size":16054,"mtime":1606324728769,"results":"46","hashOfConfig":"41"},{"size":4343,"mtime":1606323332414,"results":"47","hashOfConfig":"41"},{"size":2699,"mtime":1606325159242,"results":"48","hashOfConfig":"41"},{"size":12658,"mtime":1606324677869,"results":"49","hashOfConfig":"41"},{"size":7715,"mtime":1606324584297,"results":"50","hashOfConfig":"41"},{"size":4347,"mtime":1606324940513,"results":"51","hashOfConfig":"41"},{"size":1891,"mtime":1606323042762,"results":"52","hashOfConfig":"41"},{"size":1987,"mtime":1606325206462,"results":"53","hashOfConfig":"41"},{"size":3324,"mtime":1606323102834,"results":"54","hashOfConfig":"41"},{"size":12617,"mtime":1606323123230,"results":"55","hashOfConfig":"41"},{"size":2201,"mtime":1606323176626,"results":"56","hashOfConfig":"41"},{"size":3896,"mtime":1606323272654,"results":"57","hashOfConfig":"41"},{"size":4012,"mtime":1606323303138,"results":"58","hashOfConfig":"41"},{"size":3210,"mtime":1606323319418,"results":"59","hashOfConfig":"41"},{"size":3066,"mtime":1606323365894,"results":"60","hashOfConfig":"41"},{"size":4842,"mtime":1606323380966,"results":"61","hashOfConfig":"41"},{"size":1837,"mtime":1606324034552,"results":"62","hashOfConfig":"41"},{"size":453,"mtime":1606324640765,"results":"63","hashOfConfig":"41"},{"size":7864,"mtime":1606319730034,"results":"64","hashOfConfig":"41"},{"size":1783,"mtime":1606321391721,"results":"65","hashOfConfig":"41"},{"size":1841,"mtime":1606320305306,"results":"66","hashOfConfig":"41"},{"size":829,"mtime":1606320369594,"results":"67","hashOfConfig":"41"},{"size":5257,"mtime":1606323649163,"results":"68","hashOfConfig":"41"},{"size":6323,"mtime":1606323711723,"results":"69","hashOfConfig":"41"},{"size":15923,"mtime":1606320666070,"results":"70","hashOfConfig":"41"},{"size":1561,"mtime":1606325085065,"results":"71","hashOfConfig":"41"},{"size":3354,"mtime":1606323620023,"results":"72","hashOfConfig":"41"},{"size":14642,"mtime":1606325041605,"results":"73","hashOfConfig":"41"},{"size":4018,"mtime":1606323693383,"results":"74","hashOfConfig":"41"},{"size":3526,"mtime":1606323856792,"results":"75","hashOfConfig":"41"},{"size":8490,"mtime":1606323872536,"results":"76","hashOfConfig":"41"},{"size":16755,"mtime":1606323892864,"results":"77","hashOfConfig":"41"},{"size":3255,"mtime":1606325403054,"results":"78","hashOfConfig":"41"},{"size":1252,"mtime":1606324250577,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zpzgt5",{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/tafa/Desktop/gest_hosp_front/src/reportWebVitals.js",[],"/home/tafa/Desktop/gest_hosp_front/src/App.js",["161","162"],"/home/tafa/Desktop/gest_hosp_front/src/components/Profile/Profile.js",["163"],"/home/tafa/Desktop/gest_hosp_front/src/components/Login/Login2.js",[],"/home/tafa/Desktop/gest_hosp_front/src/components/Admin/CreateUserForm.js",["164","165","166","167","168"],"/home/tafa/Desktop/gest_hosp_front/src/components/Records/ModalPage.js",[],"/home/tafa/Desktop/gest_hosp_front/src/components/Labo/SampleCollection.js",["169","170","171","172"],"/home/tafa/Desktop/gest_hosp_front/src/components/Labo/Lab.js",[],"/home/tafa/Desktop/gest_hosp_front/src/components/Records/EditModal.js",["173","174","175"],"/home/tafa/Desktop/gest_hosp_front/src/components/Records/Patientlist.js",["176"],"/home/tafa/Desktop/gest_hosp_front/src/components/helpers/helpers.js",[],"/home/tafa/Desktop/gest_hosp_front/src/components/Admin/Users.js",[],"/home/tafa/Desktop/gest_hosp_front/src/components/Admin/Admin.js",["177","178","179"],"/home/tafa/Desktop/gest_hosp_front/src/components/Labo/RequestProcessingForm.js",["180","181","182","183","184","185","186","187"],"/home/tafa/Desktop/gest_hosp_front/src/components/Labo/ProcessingSection.js",["188","189","190","191","192"],"import React, { Component, Suspense, lazy } from 'react';\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n} from 'reactstrap';\nimport {\n  _fetchData,\n  _postData,\n  _customNotify,\n  _updateData,\n  _warningNotify,\n} from '../helpers/helpers';\nimport Loading from '../loading';\nconst SampleAnalysis = lazy(() => import('./SampleAnalysis'));\nconst PathologistComment = lazy(() => import('./PathologistComment'));\nconst PendingRequestProcess = lazy(() => import('./PendingRequestProcess'));\n\nexport default class ProcessingSection extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      requestForThisPatient: [],\n      testIdArr: [],\n      testResultsArr: [],\n    };\n  }\n\n  fetchData(id, mode) {\n    let route =\n      mode === 'pending'\n        ? `lab/pendingReqById?id=${id}`\n        : mode === 'collected'\n        ? `lab/collectedSamplesById?id=${id}`\n        : mode === 'analyzed'\n        ? `lab/analyzedSamplesById?id=${id}`\n        : null;\n    let success_callback = data =>\n      this.setState({ requestForThisPatient: data });\n    let error_callback = err => this.setState({ requestErr: err });\n    _fetchData({ route, success_callback, error_callback });\n  }\n\n  componentDidMount() {\n    const { mode } = this.props;\n    const { id } = this.props.req;\n    this.fetchData(id, mode);\n  }\n\n  saveId(test_id) {\n    const { testIdArr } = this.state;\n    let newArr = testIdArr.concat(test_id);\n    this.setState({ testIdArr: newArr });\n  }\n\n  removeId(test_id) {\n    const { testIdArr } = this.state;\n    let newArr = testIdArr.filter(id => id !== test_id);\n    this.setState({ testIdArr: newArr });\n  }\n\n  onStatusChange = test_id =>\n    !this.state.testIdArr.includes(test_id) ? this.saveId(test_id) : null;\n\n  onStatusUnchanged = test_id =>\n    this.state.testIdArr.includes(test_id) ? this.removeId(test_id) : null;\n\n  saveLabInvestigation = lab_investigation => {\n    let {\n      appearance,\n      microscopy,\n      culture,\n      antibiotic,\n      test_id,\n    } = lab_investigation;\n\n    // console.log(lab_investigation)\n    // let data = _convertArrOfObjToArr(lab_investigation);\n    let route = 'lab/analyzeSample';\n    let data = { appearance, microscopy, culture, antibiotic, test_id };\n    let callback = () => _customNotify('record submitted');\n    _updateData({ route, data, callback });\n  };\n\n  saveResults = () => {\n    const { testResultsArr } = this.state;\n    // console.log(testResultsArr);\n    // testResultsArr.forEach(test => this.saveLabInvestigation(test));\n    let testIdArr = [];\n    testResultsArr.forEach(res => testIdArr.push(res.test_id))\n    this.autoUpdate(testIdArr)\n  };\n\n  saveCollectedSamples = () => {\n    let data = this.state.testIdArr;\n\n    if (data.length === 0) return _warningNotify('no changes made');\n\n    let route = 'lab/submitSamplesCollected';\n    let cb = () => _customNotify('Record has been submitted successfully.');\n    // _updateData({ route, data, cb });\n    // this.props.updateTable(this.props.req.id);\n    this.autoUpdate(data)\n    console.log(this.state.testIdArr);\n  };\n\n  autoUpdate(testIdArr){\n    let { requestForThisPatient } = this.state;\n    console.log(requestForThisPatient)\n    let newList = [];\n    requestForThisPatient.forEach(req => !testIdArr.includes(req.test_id) ? newList.push(req) : null);\n\n    // for(let i=0; i<testIdArr.length; i++){\n      // requestForThisPatient = requestForThisPatient.filter(req => req.id !== testIdArr[i]);\n      // if(testIdArr[i])\n    // }\n    \n    this.setState({ requestForThisPatient: newList })\n    // console.log(newList)\n  }\n\n  // saveChanges = () => {\n  //   const { mode } = this.props;\n  //   if (mode === 'pending') {\n  //     this.saveCollectedSamples();\n  //   } else if (mode === 'collected') this.saveResults();\n\n  //   // let id = this.props.req.id;\n  //   // this.props.updateTable(id);\n  // };\n\n  onBlurCaptured = (sample, cellName, cellValue) => {\n    let id = sample.test_id;\n    let { testResultsArr } = this.state;\n    // let newArr = [];\n    if (testResultsArr.length === 0) {\n      testResultsArr = testResultsArr.concat({\n        test_id: id,\n        [cellName]: cellValue,\n      });\n    } else {\n      let res = [];\n      testResultsArr.forEach(test => {\n        if (test.test_id === id) res.push(true);\n        else res.push(false);\n      });\n\n      if (res.includes(true)) {\n        testResultsArr.map(a =>\n          a.test_id === id ? (a[cellName] = cellValue) : a\n        );\n      } else {\n        testResultsArr = testResultsArr.concat({\n          test_id: id,\n          [cellName]: cellValue,\n        });\n      }\n    }\n    this.setState({ testResultsArr });\n  };\n\n  render() {\n    const { req, mode, cancel } = this.props\n    const {\n      // resultModalOpen,\n      // previewModalOpen,\n      // toggleResultModal,\n      // togglePreviewModal,\n      // saveLabResults,\n      onStatusChange,\n      onStatusUnchanged,\n      // currentReq,\n      saveCollectedSamples,\n      saveResults,\n      onBlurCaptured,\n    } = this;\n    const { requestForThisPatient } = this.state;\n    \n\n    return (\n      <Suspense fallback={<Loading />}>\n      <p>{mode}</p>\n        {//   requestForThisPatient.length === 0 ? (\n        //   <p className=\"text-center\">No record found</p>\n        // ) :\n        mode === 'pending' ? (\n          <PendingRequestProcess\n            requests={requestForThisPatient}\n            // resultModalOpen={resultModalOpen}\n            // previewModalOpen={previewModalOpen}\n            // toggleResultModal={toggleResultModal}\n            // togglePreviewModal={togglePreviewModal}\n            // saveLabResults={saveLabResults}\n            onStatusChange={onStatusChange}\n            onStatusUnchanged={onStatusUnchanged}\n            saveCollectedSamples={saveCollectedSamples}\n            cancel={cancel}\n            // currentReq={requestForThisPatient}\n            req={req}\n          />\n        ) : mode === 'collected' ? (\n          <SampleAnalysis\n            saveResults={saveResults}\n            currentReq={requestForThisPatient}\n            onBlurCaptured={onBlurCaptured}\n            cancel={cancel}\n          />\n        ) : mode === 'analyzed' ? ( \n          <PathologistComment currentReq={requestForThisPatient} cancel={cancel} />\n        ) : (\n          // ) : mode === 'commented' ? (\n          //   <\n          // <SampleAnalysis currentReq={requestForThisPatient} />\n          <p>Record not found</p>\n        )}\n      </Suspense>\n    );\n  }\n}\n\nconst PatientDetails = ({ userDetails = [], currentReq = {} }) => (\n  <div className=\"form-group\">\n    <label className=\"col-md-4\" style={{ textAlign: 'left' }}>\n      Patient:{' '}\n    </label>\n    <label className=\"col-md-6\" style={{ textAlign: 'left' }}>\n      {userDetails.surname} {userDetails.firstname}\n    </label>\n    <label className=\"col-md-4\" style={{ textAlign: 'left' }}>\n      Test:{' '}\n    </label>\n    <label className=\"col-md-6\" style={{ textAlign: 'left' }}>\n      {currentReq.test}\n    </label>\n    <label className=\"col-md-4\" style={{ textAlign: 'left' }}>\n      Sample:{' '}\n    </label>\n    <label className=\"col-md-6\" style={{ textAlign: 'left' }}>\n      {currentReq.sample}\n    </label>\n  </div>\n);\n\nexport class ResultModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      result: '',\n      appearance: '',\n      microscopy: '',\n      culture: '',\n      antibiotic: '',\n      warning: '',\n    };\n  }\n  onInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n      warning: '',\n    });\n  };\n\n  saveLabResults = e => {\n    e.preventDefault();\n    const { result, appearance, microscopy, culture, antibiotic } = this.state;\n    if (\n      result === '' &&\n      appearance === '' &&\n      microscopy === '' &&\n      culture === '' &&\n      antibiotic === ''\n    )\n      return this.setState({ warning: 'All fields cannot be left blank' });\n\n    const formData = { result, appearance, microscopy, culture, antibiotic };\n    this.props.saveLabResults(formData);\n    this.clearText();\n  };\n\n  clearText = () =>\n    this.setState({\n      result: '',\n      appearance: '',\n      microscopy: '',\n      culture: '',\n      antibiotic: '',\n    });\n\n  render() {\n    const {\n      resultModalOpen,\n      toggleResultModal,\n      currentReq,\n      userDetails,\n    } = this.props;\n    const {\n      result,\n      appearance,\n      microscopy,\n      culture,\n      antibiotic,\n      warning,\n    } = this.state;\n    return (\n      <Modal isOpen={resultModalOpen} toggle={toggleResultModal}>\n        <ModalHeader toggle={toggleResultModal}>Add Result</ModalHeader>\n        <ModalBody>\n          <form onSubmit={this.saveLabResults}>\n            <PatientDetails currentReq={currentReq} userDetails={userDetails} />\n            <label className=\"col-md-3 control-label\">Result:</label>\n            <input\n              name=\"result\"\n              className=\"form-control col-md-9\"\n              value={result}\n              onChange={this.onInputChange}\n            />\n\n            <label className=\"col-md-3 control-label\">Appearance:</label>\n            <input\n              name=\"appearance\"\n              className=\"form-control col-md-9\"\n              value={appearance}\n              onChange={this.onInputChange}\n            />\n\n            <label className=\"col-md-3 control-label\">Microscopy:</label>\n            <input\n              name=\"microscopy\"\n              className=\"form-control col-md-9\"\n              value={microscopy}\n              onChange={this.onInputChange}\n            />\n\n            <label className=\"col-md-3 control-label\">Culture:</label>\n            <input\n              name=\"culture\"\n              className=\"form-control col-md-9\"\n              value={culture}\n              onChange={this.onInputChange}\n            />\n\n            <label className=\"col-md-3 control-label\">Antibiotic:</label>\n            <input\n              name=\"antibiotic\"\n              className=\"form-control col-md-9\"\n              value={antibiotic}\n              onChange={this.onInputChange}\n            />\n\n            {warning && (\n              <span className=\"alert alert-danger text-center offset-md-4\">\n                {warning}\n              </span>\n            )}\n            <hr />\n            <input\n              type=\"submit\"\n              className=\"btn btn-outline-success offset-md-5\"\n              value=\"Save Result\"\n            />\n          </form>\n        </ModalBody>\n      </Modal>\n    );\n  }\n}\n\nconst Result = ({ result, appearance, microscopy, culture, antibiotic }) => {\n  const divideStyle = {\n    margin: '.7em',\n    width: '50%',\n  };\n  const labelStyle = {\n    textAlign: 'left',\n    width: '30%',\n  };\n  const valStyle = {\n    textAlign: 'left',\n    width: '70%',\n  };\n  return (\n    <div>\n      <h2>Lab Test Result</h2>\n      <div style={divideStyle}>\n        <label style={labelStyle}>Result: </label>\n        <label style={valStyle}>{result}</label>\n      </div>\n      <div style={divideStyle}>\n        <label style={labelStyle}>Appearance: </label>\n        <label style={valStyle}>{appearance}</label>\n      </div>\n      <div style={divideStyle}>\n        <label style={labelStyle}>Microscopy: </label>\n        <label style={valStyle}>{microscopy}</label>\n      </div>\n      <div style={divideStyle}>\n        <label style={labelStyle}>Culture: </label>\n        <label style={valStyle}>{culture}</label>\n      </div>\n      <div style={divideStyle}>\n        <label style={labelStyle}>Antibiotic: </label>\n        <label style={valStyle}>{antibiotic}</label>\n      </div>\n    </div>\n  );\n};\n\nconst PrintPreview = ({\n  req,\n  userDetails,\n  previewModalOpen,\n  togglePreviewModal,\n}) => {\n  const onPrintClick = () => {\n    window.frames[\n      'print_frame'\n    ].document.body.innerHTML = document.getElementById('labResult').innerHTML;\n    window.frames['print_frame'].window.focus();\n    window.frames['print_frame'].window.print();\n  };\n  return (\n    <Modal size=\"lg\" isOpen={previewModalOpen} toggle={togglePreviewModal}>\n      <ModalHeader toggle={togglePreviewModal}>Add Result</ModalHeader>\n      <ModalBody>\n        <div id=\"labResult\">\n          {/* <PatientInfo req={req} userDetails={userDetails} /> */}\n          <Result\n            result=\"cleared\"\n            appearance=\"cleared\"\n            microscopy=\"cleared\"\n            culture=\"cleared\"\n            antibiotic=\"cleared\"\n          />\n        </div>\n        <iframe name=\"print_frame\" width=\"0\" height=\"0\" src=\"about:blank\" />\n        <button className=\"btn btn-outline-success\" onClick={onPrintClick}>\n          Print\n        </button>\n      </ModalBody>\n    </Modal>\n  );\n};\n","/home/tafa/Desktop/gest_hosp_front/src/components/Labo/CompletedLabTests.js",[],"/home/tafa/Desktop/gest_hosp_front/src/components/Labo/PathologistComment.js",[],"/home/tafa/Desktop/gest_hosp_front/src/components/Labo/PrintResult.js",[],"/home/tafa/Desktop/gest_hosp_front/src/components/Labo/SampleReception.js",["193"],"/home/tafa/Desktop/gest_hosp_front/src/components/Records/PatientAssignedToday.js",["194"],"/home/tafa/Desktop/gest_hosp_front/src/components/Records/DoctorsListModal.js",[],"/home/tafa/Desktop/gest_hosp_front/src/components/PatientForm.js",["195","196"],"import React from 'react';\nimport { Container } from 'reactstrap';\n\nimport { toCamelCase } from './helpers/helpers';\n// import './print.css';\n\n/**\n * This component renders the basic details of the patient.\n */\nfunction PatientForm({ record }) {\n  const username = localStorage.getItem('user');\n  const doctor = toCamelCase(username);\n  const date = new Date();\n  const flexStyle = { display: 'flex', flexDirection: 'horizontal' };\n  return (\n    <Container style={flexStyle}>\n      <div style={{ width: '20%' }}>\n        <img src={defaultImage} alt=\"default_image\" />\n      </div>\n      <div style={{ width: '80%' }}>\n        <div style={flexStyle}>\n          <div className=\"label\" style={{ padding: '.7em', width: '41.66%' }}>\n            <label>Names: </label>\n            <span>\n              {record.surname} {record.firstname}\n            </span>\n          </div>\n          <div className=\"label\" style={{ padding: '.7em', width: '25%' }}>\n            <label>Gender: </label>\n            <span>{record.gender}</span>\n          </div>\n          <div className=\"label\" style={{ padding: '.7em', width: '33.33%' }}>\n            <label>DOB: </label>\n            <span>{record.DOB}</span>\n          </div>\n        </div>\n        <div style={flexStyle}>\n          <div className=\"label\" style={{ padding: '.7em', width: '41.66%' }}>\n            <label>Phone: </label>\n            <span>{record.phoneNo}</span>\n          </div>\n          <div className=\"label\" style={{ padding: '.7em', width: '25%' }}>\n            <label>ID: </label>\n            <span>{record.id}</span>\n          </div>\n          <div className=\"label\" style={{ padding: '.7em', width: '33.33%' }}>\n            <label>Doctor: </label>\n            <span>{doctor}</span>\n          </div>\n        </div>\n      </div>\n    </Container>\n  );\n}\n\nexport default PatientForm;\n","/home/tafa/Desktop/gest_hosp_front/src/components/loading.js",["197"],"/home/tafa/Desktop/gest_hosp_front/src/components/Account/ServicesSetupForm.js",["198"],"/home/tafa/Desktop/gest_hosp_front/src/components/Pharmacy/EditDrugs.js",["199"],"/home/tafa/Desktop/gest_hosp_front/src/components/Doctor/AssignedList.js",[],"/home/tafa/Desktop/gest_hosp_front/src/components/Doctor/DressingRequestForm.js",[],"/home/tafa/Desktop/gest_hosp_front/src/components/Doctor/PcomplaintsForm.js",[],"/home/tafa/Desktop/gest_hosp_front/src/components/Doctor/EditPrescriptionRequest.js",[],"/home/tafa/Desktop/gest_hosp_front/src/components/Doctor/SysExaminationEdit.js",["200","201"],"/home/tafa/Desktop/gest_hosp_front/src/components/Pharmacy/Pharmacy.js",[],"/home/tafa/Desktop/gest_hosp_front/src/components/Doctor/PreviousVisits.js",["202","203","204"],"/home/tafa/Desktop/gest_hosp_front/src/components/Doctor/PatientClarking.js",["205","206","207"],"/home/tafa/Desktop/gest_hosp_front/src/components/Doctor/NewRadiologyInvestigations.js",[],"/home/tafa/Desktop/gest_hosp_front/src/components/Pharmacy/PendingPharmacyRequest.js",[],"/home/tafa/Desktop/gest_hosp_front/src/components/Pharmacy/AddDrug.js",[],"/home/tafa/Desktop/gest_hosp_front/src/components/Pharmacy/PrescriptionProcessingForm.js",["208","209"],"/home/tafa/Desktop/gest_hosp_front/src/nav-old.js",["210","211","212","213","214"],"import React, { Component } from \"react\";\nimport Profile from \"./components/Profile/Profile\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  Button\n} from \"reactstrap\";\nimport logo from \"./images/logo.jpeg\";\n\nexport default class NavbarNow extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      isProfileOpen: false\n    };\n  }\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n    this.props.toggleLanding();\n  };\n\n  toggleProfile = () => {\n    this.setState({\n      isProfileOpen: !this.state.isProfileOpen\n    });\n  };\n  render() {\n    const {\n      records,\n      doctors,\n      pharmacy,\n      lab,\n      admin,\n      insurance,\n      profile,\n      account,\n      username\n    } = this.props;\n    return (\n      <Navbar \n        dark \n        expand=\"md\"\n        style={{\n          minHeight: '50px',\n          padding: 0,\n          margin: 0,\n          paddingRight: 5,\n          backgroundColor: '#0069D9',\n        }}\n      >\n        <NavbarBrand>\n          <img src={logo} alt=\"logo\" height=\"44\"\n            width=\"50\"\n            style={{\n              margin: '0 20px',\n            }} \n          />\n          {/* <h4 className=\"logoText\">HMS</h4> */}\n        </NavbarBrand>\n        <NavbarToggler onClick={this.toggle} />\n        <Collapse isOpen={this.state.isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            {records && (\n              <NavItem onClick={this.toggle}>\n                <NavLink to=\"/patientlist\" className=\"nav\">\n                  Record Module\n                </NavLink>\n              </NavItem>\n            )}\n            {doctors && (\n              <NavItem onClick={this.toggle}>\n                <NavLink to=\"/patient_clarking\" className=\"nav\">\n                  Doctors Module\n                </NavLink>\n              </NavItem>\n            )}\n            {pharmacy && (\n              <NavItem onClick={this.toggle}>\n                <NavLink to=\"/pharmacy\" className=\"nav\">\n                  Pharmacy Module\n                </NavLink>\n              </NavItem>\n            )}\n            {lab && (\n              <NavItem onClick={this.toggle}>\n                <NavLink to=\"/lab\" className=\"nav\">\n                  Laboratory Module\n                </NavLink>\n              </NavItem>\n            )}\n\n            <NavItem onClick={this.toggle}>\n              <NavLink to=\"/admin\" className=\"nav\">\n                Admin\n              </NavLink>\n            </NavItem>\n            {/* {account && (\n              <NavItem onClick={this.toggle}>\n                <NavLink to=\"/admin\" className=\"nav\">\n                  Admin\n                </NavLink>\n              </NavItem>\n            )}*/}\n            \n            \n            \n\n            <NavItem>\n              <Profile\n                isProfileOpen={this.state.isProfileOpen}\n                toggleProfile={this.toggleProfile}\n              />\n            </NavItem>\n\n            <NavItem>\n              <Button color=\"danger\" onClick={this.logout}>\n                Logout\n              </Button>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    );\n  }\n}\n","/home/tafa/Desktop/gest_hosp_front/src/error-boundary/MyErrorBoundary.js",[],{"ruleId":"215","severity":1,"message":"216","line":11,"column":3,"nodeType":"217","messageId":"218","endLine":11,"endColumn":10},{"ruleId":"215","severity":1,"message":"219","line":122,"column":11,"nodeType":"217","messageId":"218","endLine":122,"endColumn":15},{"ruleId":"215","severity":1,"message":"220","line":11,"column":3,"nodeType":"217","messageId":"218","endLine":11,"endColumn":15},{"ruleId":"215","severity":1,"message":"221","line":3,"column":22,"nodeType":"217","messageId":"218","endLine":3,"endColumn":31},{"ruleId":"222","severity":1,"message":"223","line":215,"column":23,"nodeType":"224","endLine":215,"endColumn":37},{"ruleId":"222","severity":1,"message":"223","line":225,"column":23,"nodeType":"224","endLine":225,"endColumn":37},{"ruleId":"222","severity":1,"message":"223","line":235,"column":23,"nodeType":"224","endLine":235,"endColumn":38},{"ruleId":"222","severity":1,"message":"223","line":245,"column":23,"nodeType":"224","endLine":245,"endColumn":35},{"ruleId":"215","severity":1,"message":"225","line":5,"column":22,"nodeType":"217","messageId":"218","endLine":5,"endColumn":33},{"ruleId":"215","severity":1,"message":"226","line":52,"column":24,"nodeType":"217","messageId":"218","endLine":52,"endColumn":32},{"ruleId":"215","severity":1,"message":"227","line":53,"column":31,"nodeType":"217","messageId":"218","endLine":53,"endColumn":45},{"ruleId":"215","severity":1,"message":"228","line":106,"column":7,"nodeType":"217","messageId":"218","endLine":106,"endColumn":11},{"ruleId":"215","severity":1,"message":"229","line":69,"column":46,"nodeType":"217","messageId":"218","endLine":69,"endColumn":53},{"ruleId":"215","severity":1,"message":"230","line":70,"column":13,"nodeType":"217","messageId":"218","endLine":70,"endColumn":15},{"ruleId":"215","severity":1,"message":"231","line":70,"column":42,"nodeType":"217","messageId":"218","endLine":70,"endColumn":48},{"ruleId":"215","severity":1,"message":"225","line":8,"column":35,"nodeType":"217","messageId":"218","endLine":8,"endColumn":46},{"ruleId":"215","severity":1,"message":"232","line":48,"column":13,"nodeType":"217","messageId":"218","endLine":48,"endColumn":25},{"ruleId":"215","severity":1,"message":"233","line":48,"column":48,"nodeType":"217","messageId":"218","endLine":48,"endColumn":53},{"ruleId":"215","severity":1,"message":"234","line":52,"column":7,"nodeType":"217","messageId":"218","endLine":52,"endColumn":21},{"ruleId":"215","severity":1,"message":"225","line":5,"column":3,"nodeType":"217","messageId":"218","endLine":5,"endColumn":14},{"ruleId":"215","severity":1,"message":"235","line":6,"column":3,"nodeType":"217","messageId":"218","endLine":6,"endColumn":17},{"ruleId":"215","severity":1,"message":"236","line":7,"column":3,"nodeType":"217","messageId":"218","endLine":7,"endColumn":24},{"ruleId":"215","severity":1,"message":"237","line":52,"column":18,"nodeType":"217","messageId":"218","endLine":52,"endColumn":29},{"ruleId":"215","severity":1,"message":"238","line":54,"column":7,"nodeType":"217","messageId":"218","endLine":54,"endColumn":18},{"ruleId":"215","severity":1,"message":"239","line":55,"column":7,"nodeType":"217","messageId":"218","endLine":55,"endColumn":22},{"ruleId":"215","severity":1,"message":"240","line":56,"column":7,"nodeType":"217","messageId":"218","endLine":56,"endColumn":23},{"ruleId":"215","severity":1,"message":"241","line":57,"column":7,"nodeType":"217","messageId":"218","endLine":57,"endColumn":17},{"ruleId":"215","severity":1,"message":"221","line":9,"column":3,"nodeType":"217","messageId":"218","endLine":9,"endColumn":12},{"ruleId":"215","severity":1,"message":"242","line":100,"column":9,"nodeType":"217","messageId":"218","endLine":100,"endColumn":14},{"ruleId":"215","severity":1,"message":"243","line":101,"column":9,"nodeType":"217","messageId":"218","endLine":101,"endColumn":11},{"ruleId":"215","severity":1,"message":"244","line":410,"column":7,"nodeType":"217","messageId":"218","endLine":410,"endColumn":19},{"ruleId":"245","severity":1,"message":"246","line":437,"column":9,"nodeType":"247","endLine":437,"endColumn":77},{"ruleId":"215","severity":1,"message":"248","line":27,"column":9,"nodeType":"217","messageId":"218","endLine":27,"endColumn":23},{"ruleId":"249","severity":1,"message":"250","line":12,"column":1,"nodeType":"251","endLine":101,"endColumn":2},{"ruleId":"215","severity":1,"message":"228","line":13,"column":9,"nodeType":"217","messageId":"218","endLine":13,"endColumn":13},{"ruleId":"252","severity":2,"message":"253","line":18,"column":19,"nodeType":"217","messageId":"254","endLine":18,"endColumn":31},{"ruleId":"255","severity":1,"message":"256","line":7,"column":3,"nodeType":"247","endLine":12,"endColumn":5},{"ruleId":"215","severity":1,"message":"257","line":3,"column":3,"nodeType":"217","messageId":"218","endLine":3,"endColumn":7},{"ruleId":"258","severity":1,"message":"259","line":15,"column":3,"nodeType":"260","messageId":"261","endLine":17,"endColumn":4},{"ruleId":"215","severity":1,"message":"262","line":58,"column":24,"nodeType":"217","messageId":"218","endLine":58,"endColumn":42},{"ruleId":"215","severity":1,"message":"263","line":58,"column":44,"nodeType":"217","messageId":"218","endLine":58,"endColumn":47},{"ruleId":"215","severity":1,"message":"264","line":5,"column":8,"nodeType":"217","messageId":"218","endLine":5,"endColumn":17},{"ruleId":"265","severity":1,"message":"266","line":24,"column":11,"nodeType":"247","endLine":24,"endColumn":47},{"ruleId":"215","severity":1,"message":"267","line":46,"column":28,"nodeType":"217","messageId":"218","endLine":46,"endColumn":41},{"ruleId":"215","severity":1,"message":"268","line":2,"column":10,"nodeType":"217","messageId":"218","endLine":2,"endColumn":13},{"ruleId":"215","severity":1,"message":"269","line":12,"column":10,"nodeType":"217","messageId":"218","endLine":12,"endColumn":15},{"ruleId":"215","severity":1,"message":"270","line":114,"column":9,"nodeType":"217","messageId":"218","endLine":114,"endColumn":30},{"ruleId":"215","severity":1,"message":"235","line":16,"column":3,"nodeType":"217","messageId":"218","endLine":16,"endColumn":17},{"ruleId":"215","severity":1,"message":"238","line":296,"column":7,"nodeType":"217","messageId":"218","endLine":296,"endColumn":18},{"ruleId":"215","severity":1,"message":"271","line":41,"column":7,"nodeType":"217","messageId":"218","endLine":41,"endColumn":12},{"ruleId":"215","severity":1,"message":"272","line":42,"column":7,"nodeType":"217","messageId":"218","endLine":42,"endColumn":16},{"ruleId":"215","severity":1,"message":"273","line":43,"column":7,"nodeType":"217","messageId":"218","endLine":43,"endColumn":14},{"ruleId":"215","severity":1,"message":"274","line":44,"column":7,"nodeType":"217","messageId":"218","endLine":44,"endColumn":14},{"ruleId":"215","severity":1,"message":"275","line":45,"column":7,"nodeType":"217","messageId":"218","endLine":45,"endColumn":15},"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'CardSubtitle' is defined but never used.","'_postData' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'_updateData' is defined but never used.","'patients' is assigned a value but never used.","'onRequestClick' is assigned a value but never used.","'date' is assigned a value but never used.","'details' is assigned a value but never used.","'id' is assigned a value but never used.","'gender' is assigned a value but never used.","'requestsList' is assigned a value but never used.","'error' is assigned a value but never used.","'onPatientClick' is assigned a value but never used.","'_warningNotify' is defined but never used.","'_convertArrOfObjToArr' is defined but never used.","'toggleRoute' is assigned a value but never used.","'userDetails' is assigned a value but never used.","'resultModalOpen' is assigned a value but never used.","'previewModalOpen' is assigned a value but never used.","'currentReq' is assigned a value but never used.","'route' is assigned a value but never used.","'cb' is assigned a value but never used.","'PrintPreview' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'error_callback' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous class","ExportDefaultDeclaration","no-undef","'defaultImage' is not defined.","undef","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Form' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'generalexamination' is assigned a value but never used.","'mss' is assigned a value but never used.","'SearchBar' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'currentRecord' is assigned a value but never used.","'Col' is defined but never used.","'error' is defined but never used.","'presenting_complaints' is assigned a value but never used.","'admin' is assigned a value but never used.","'insurance' is assigned a value but never used.","'profile' is assigned a value but never used.","'account' is assigned a value but never used.","'username' is assigned a value but never used."]